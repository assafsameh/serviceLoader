name: ‚ú® Selenium Grid CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:  # üëà Manual trigger

jobs:
  selenium-tests:
    name: Run on ${{ matrix.browser }} node for ${{ matrix.group }} group
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox]
        group: [smoke, regression]
    env:
      test_browser: ${{ matrix.browser }}
      test_group: ${{ matrix.group }}

    steps:
      - name: üì• Checkout source code
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: üßπ Clean previous Allure results and reports
        run: |
          echo "Deleting old allure-results and merged-allure-report folders (if they exist)..."
          rm -rf allure-results 2>/dev/null || true
          rm -rf merged-results 2>/dev/null || true
          rm -rf allure-results/* || true
          rm -rf allure-results/.* 2>/dev/null || true
          rm -rf merged-allure-report 2>/dev/null || true
          rm -rf final-report 2>/dev/null || true

      - name: üê≥ Confirm Docker & Docker Compose versions
        run: |
          docker --version
          docker compose version

      - name: üß± Start Selenium Grid
        run: docker compose -f docker/docker-compose.yml up -d selenium-hub ${{ matrix.browser }}

      - name: ‚è±Ô∏è Wait for Selenium Hub to be ready
        run: |
          echo "Waiting for Selenium Grid to be ready..."
          for i in {1..10}; do
            if curl -s http://localhost:4444/wd/hub/status | grep -q "ready\":true"; then
              echo "‚úÖ Selenium Grid is ready."
              break
            fi
            sleep 3
          done   

      - name: üß™ Run Selenium TestNG Tests with Maven
        run:  |
          echo "Running tests for browser: ${{ matrix.browser }} for group ${{ matrix.group }}"
          mvn clean test -Dbrowser=${{ matrix.browser }}

      - name: üìÇ Check Allure Results Directory
        run: |
          ls -l allure-results || echo "‚ùå allure-results folder missing!"

      - name: üì§ Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ github.run_id }}-${{ matrix.browser }}-${{ matrix.group }}
          path: allure-results
          retention-days: 1   # ‚¨ÖÔ∏è keep artifact for 1 day only

      - name: üßπ Stop Selenium Grid
        run: docker compose -f docker/docker-compose.yml down


  merge-allure-reports:
    name: üìä Merge Allure Reports
    runs-on: ubuntu-latest
    needs: selenium-tests

    steps:
      - name: üì• Checkout source code
        uses: actions/checkout@v4

      - name: ‚¨áÔ∏è Download All Allure Results
        uses: actions/download-artifact@v4
        with:
          path: downloaded-results
          retention-days: 2   # ‚¨ÖÔ∏è keep artifact for 2 days only
          merge-multiple: false

      - name: üß™ Verify downloaded folders
        run: ls -R downloaded-results

      #      - name: üß± Merge Allure Results
      #        run: |
      #          mkdir -p merged-results
      #          find downloaded-results -type d -name "allure-results*" -exec cp -r {}/* merged-results/ \;
      #          ls -l merged-results

      - name: Merge Allure Results
        run: bash .github/workflows/scripts/merge-allure-results.sh

      - name: Install Allure CLI if not exists
        run: |
          if ! command -v allure &> /dev/null; then
            echo "Allure not found. Installing..."
            curl -L -o allure.tgz https://github.com/allure-framework/allure2/releases/download/2.34.0/allure-2.34.0.tgz
            tar -xvzf allure.tgz
            sudo mv -f allure-2.34.0 /opt/allure
            sudo ln -sf /opt/allure/bin/allure /usr/local/bin/allure
          else
            echo "‚úÖ Allure already installed: $(allure --version)"
          fi

      #        ‚úÖ What it does:
      #        Installs the third-party allure-commandline Node.js wrapper package.
      #        Under the hood, it downloads the Allure binary too, but wraps it in an NPM-based interface.
      #        ‚ö†Ô∏è Key differences:
      #        Managed via NPM, not an official package from the Allure team.
      #        Version may lag behind or vary depending on NPM's publishing schedule.
      #        Package size is smaller and easier to use, but you get less control over versioning.
      #      - name: Install Allure CLI
      #        run: |
      #          npm install -g allure-commandline

      - name: Generate Allure Report
        run: |
          allure generate merged-results -o merged-allure-report --clean      

      - name: Debug Allure Report Folder
        run: |
          echo "üìÇ Listing contents of merged-allure-report:"
          ls -R merged-allure-report || echo "‚ùå merged-allure-report does not exist or is empty"

      - name: Upload Final Merged Report
        uses: actions/upload-artifact@v4
        with:
          name: merged-allure-report-${{ github.run_id }}
          path: merged-allure-report
          retention-days: 1   # ‚¨ÖÔ∏è keep artifact for 1 day only
          if-no-files-found: warn